<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="project.meetu.model.dao.mapper.UserMapper">

	<!-- 특정 회원정보 조회(회원의 구성원 정보 포함) -->
	<resultMap id="userResultMap" type="ServiceUser">
		<id column="user_id" jdbcType="VARCHAR" property="userId" javaType="string" />
		<result column="password" jdbcType="VARCHAR" property="password" javaType="string" />
		<result column="phone" jdbcType="VARCHAR" property="phone" javaType="string" />
		<association property="memberInfo" column="member_no" javaType="Member">
			<id column="member_no" jdbcType="VARCHAR" property="memberNo" javaType="string" />
			<result column="role" jdbcType="INTEGER" property="role" javaType="int" />
			<result column="name" jdbcType="VARCHAR" property="name" javaType="string" />
			<result column="email" jdbcType="VARCHAR" property="email" javaType="string" />
			<association property="deptInfo" column="dept_no" javaType="Department">
				<id column="prof_dept_no" jdbcType="VARCHAR" property="deptNo" javaType="string" />
				<result column="dept_name" jdbcType="VARCHAR" property="deptName" javaType="string" />
			</association>
		</association>
	</resultMap>
		
	<resultMap id="collegeResultMap" type="College">
		<id column="college_no" jdbcType="VARCHAR" property="collegeNo" javaType="string" />
		<result column="college_name" jdbcType="VARCHAR" property="collegeName" javaType="string" />
	</resultMap>
	
	<resultMap id="departmentResultMap" type="Department">
		<id column="dept_no" jdbcType="VARCHAR" property="deptNo" javaType="string" />
		<result column="dept_name" jdbcType="VARCHAR" property="deptName" javaType="string" />
		<result column="college_no" jdbcType="VARCHAR" property="collegeNo" javaType="string" />
	</resultMap>
	
	<resultMap id="professorResultMap" type="Professor">
		<id column="prof_no" jdbcType="VARCHAR" property="memberNo" javaType="string" />
		<result column="major" jdbcType="VARCHAR" property="major" javaType="string" />
		<result column="office_no" jdbcType="VARCHAR" property="officeNo" javaType="string" />
		<association property="memberInfo" column="member_no" javaType="Member">
			<id column="member_no" jdbcType="VARCHAR" property="memberNo" javaType="string" />
			<result column="email" jdbcType="VARCHAR" property="email" javaType="string" />
			<result column="name" jdbcType="VARCHAR" property="name" javaType="string" />
			<association property="deptInfo" column="dept_no" javaType="Department">
				<id column="dept_no" jdbcType="VARCHAR" property="deptNo" javaType="string" />
				<result column="dept_name" jdbcType="VARCHAR" property="deptName" javaType="string" />
			</association>
		</association>
		<collection property="courses" ofType="Course">
			<id column="course_no" jdbcType="VARCHAR" property="courseNo" javaType="string" />
			<result column="title" jdbcType="VARCHAR" property="title" javaType="string" />
		</collection>
	</resultMap>
	
    <select id="selectServiceUser" parameterType="String" resultMap="userResultMap">
        SELECT user_id, password, phone, member_no,
        	role, name, email, dept_no, dept_name
        FROM service_user 
        	JOIN member USING(member_no)
        	JOIN department USING(dept_no)
        WHERE user_id = #{userId}
    </select>
    
    
    <select id="selectCollege" resultMap="collegeResultMap">
        SELECT college_no, college_name
        FROM college
    </select>
    
    <select id="selectDepartment" resultMap="departmentResultMap">
        SELECT dept_no, dept_name, college_no
        FROM department
    </select>
    
    <select id="selectProfessorByDept" parameterType="String" resultMap="professorResultMap">
		SELECT p.member_no AS prof_no, p.major, p.office_no, 
    		m.member_no, m.email, m.dept_no, m.name,
    		d.dept_name,
    		co.course_no, co.title
		FROM professor p
    		JOIN member m ON p.member_no = m.member_no
    		JOIN department d ON m.dept_no = d.dept_no
    		JOIN class cl ON cl.prof_no = p.member_no
    		JOIN course co ON co.course_no = cl.course_no
		WHERE m.dept_no = #{deptNo}
	</select>
    
    <select id="selectServiceUserByMemberNo" parameterType="String" resultMap="userResultMap">
        SELECT user_id, password, phone, member_no,
        	role, name, email, dept_no
        FROM service_user JOIN member USING(member_no)
        WHERE member_no = #{memberNo}
    </select>
    
    <select id="selectProfessorByKeyword" parameterType="String" resultMap="professorResultMap">
    	SELECT p.member_no AS prof_no, p.major, p.office_no, 
    		m.member_no, m.email, m.dept_no, m.name,
    		d.dept_name,
    		co.course_no, co.title
    	FROM professor p
    		JOIN member m ON p.member_no = m.member_no
    		JOIN department d ON m.dept_no = d.dept_no
    		JOIN class cl ON cl.prof_no = p.member_no
    		JOIN course co ON co.course_no = cl.course_no
    	where m.name LIKE #{keyword} OR replace(p.major, ' ', '') LIKE #{keyword} OR m.dept_no IN (SELECT dept_no FROM department WHERE dept_name LIKE #{keyword})
    </select>
    
    <select id="selectProfessorByMemberNo" parameterType="String" resultMap="professorResultMap">
        SELECT p.member_no AS prof_no, p.major, p.office_no, 
    		m.member_no, m.email, m.dept_no, m.name,
    		d.dept_name,
    		co.course_no, co.title
		FROM professor p
    		JOIN member m ON p.member_no = m.member_no
    		JOIN department d ON m.dept_no = d.dept_no
    		JOIN class cl ON cl.prof_no = p.member_no
    		JOIN course co ON co.course_no = cl.course_no
		WHERE m.member_no = #{memberNo}
    </select>
</mapper>