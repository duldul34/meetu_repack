<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="project.meetu.model.dao.mapper.ConsultMapper">
	
	<resultMap id="consultResultMap" type="Consult">
		<id column="consult_id" jdbcType="INTEGER" property="id" javaType="int" />
		<result column="start_date" jdbcType="DATE" property="startDate" javaType="string" />
		<result column="end_date" jdbcType="DATE" property="endDate" javaType="string" />
		<result column="reason" jdbcType="VARCHAR" property="reason" javaType="string" />
		<result column="type" jdbcType="INTEGER" property="type" javaType="int" />
		<result column="status" jdbcType="INTEGER" property="status" javaType="int" />
		<result column="cancel_msg" jdbcType="VARCHAR" property="cancelMsg" javaType="string" />
		<association property="profUser" column="prof_id" javaType="ServiceUser">
			<id column="prof_id" jdbcType="VARCHAR" property="userId" javaType="string" />
			<association property="memberInfo" column="prof_no" javaType="Member">
				<id column="prof_no" jdbcType="VARCHAR" property="memberNo" javaType="string" />
				<result column="prof_name" jdbcType="VARCHAR" property="name" javaType="string" />
				<association property="profInfo" column="prof_no" javaType="Professor">
					<id column="prof_no" jdbcType="VARCHAR" property="memberNo" javaType="string" />
					<result column="office_no" jdbcType="VARCHAR" property="officeNo" javaType="string" />
				</association>
				<association property="deptInfo" column="prof_dept_no" javaType="Department">
					<id column="prof_dept_no" jdbcType="VARCHAR" property="deptNo" javaType="string" />
					<result column="prof_dept_name" jdbcType="VARCHAR" property="deptName" javaType="string" />
				</association>
			</association>
		</association>
		<association property="stuUser" column="stu_id" javaType="ServiceUser">
			<id column="stu_id" jdbcType="VARCHAR" property="userId" javaType="string" />
			<association property="memberInfo" column="stu_no" javaType="Member">
				<id column="stu_no" jdbcType="VARCHAR" property="memberNo" javaType="string" />
				<result column="stu_name" jdbcType="VARCHAR" property="name" javaType="string" />
				<association property="stuInfo" column="stu_no" javaType="Student">
					<id column="stu_no" jdbcType="VARCHAR" property="memberNo" javaType="string" />
					<result column="year" jdbcType="INTEGER" property="year" javaType="int" />
				</association>
				<association property="deptInfo" column="stu_dept_no" javaType="Department">
					<id column="stu_dept_no" jdbcType="VARCHAR" property="deptNo" javaType="string" />
					<result column="stu_dept_name" jdbcType="VARCHAR" property="deptName" javaType="string" />
				</association>
			</association>
		</association>
	</resultMap>
	
	<!-- 특정 회원의 전체 상담목록 조회 -->
	<select id="selectConsultByUser" parameterType="String" resultMap="consultResultMap">
		SELECT consult_id, start_date, end_date, reason, type, status, c.prof_id, c.stu_id, cancel_msg,
    		pm.member_no AS prof_no, pm.name AS prof_name, pm.dept_no AS prof_dept_no,
    		p.office_no,
    		pd.dept_name AS prof_dept_name,
   		 	sm.member_no AS stu_no, sm.name AS stu_name, sm.dept_no AS stu_dept_no,
   		 	s.year,
   		 	sd.dept_name AS stu_dept_name
		FROM consult c 
    		JOIN service_user pu ON c.prof_id = pu.user_id
    		JOIN member pm ON pu.member_no = pm.member_no
    		JOIN professor p ON pu.member_no = p.member_no
    		JOIN department pd ON pm.dept_no = pd.dept_no 
			JOIN service_user su ON c.stu_id = su.user_id  
			JOIN member sm ON su.member_no = sm.member_no
			JOIN student s ON su.member_no = s.member_no 
			JOIN department sd ON sm.dept_no = sd.dept_no
		WHERE c.prof_id = #{userId} OR c.stu_id = #{userId}
	</select>
	
	<!-- 상담id에 대한 상세정보 조회 -->
	<select id="selectConsultByConsultId" parameterType="String" resultMap="consultResultMap">
		SELECT consult_id, start_date, end_date, reason, type, status, c.prof_id, c.stu_id, cancel_msg,
    		pm.member_no AS prof_no, pm.name AS prof_name, pm.dept_no AS prof_dept_no,
    		p.office_no,
    		pd.dept_name AS prof_dept_name,
   		 	sm.member_no AS stu_no, sm.name AS stu_name, sm.dept_no AS stu_dept_no,
   		 	s.year,
   		 	sd.dept_name AS stu_dept_name
		FROM consult c 
    		JOIN service_user pu ON c.prof_id = pu.user_id
    		JOIN member pm ON pu.member_no = pm.member_no
    		JOIN professor p ON pu.member_no = p.member_no
    		JOIN department pd ON pm.dept_no = pd.dept_no 
			JOIN service_user su ON c.stu_id = su.user_id  
			JOIN member sm ON su.member_no = sm.member_no
			JOIN student s ON su.member_no = s.member_no 
			JOIN department sd ON sm.dept_no = sd.dept_no
		WHERE consult_id = #{consultId}
	</select>
	
	<!-- 예약 상태 변경 -->
	<update id="updateStatus" parameterType="Consult">
		UPDATE consult
		<if test="cancelMsg == null">
				SET status = #{status}
		</if>
		<if test="cancelMsg != null">
				SET status = #{status}, cancel_msg = #{cancelMsg}
		</if>
		WHERE consult_id = #{id}
	</update>
	
	<!-- 특정 학생-교수 간 예약 레코드 -->
	<select id="selectConsultByStuIdAndProfId" parameterType="String" resultMap="consultResultMap">
		SELECT consult_id, start_date, end_date, reason, type, status, c.prof_id, c.stu_id, cancel_msg,
    		pm.member_no AS prof_no, pm.name AS prof_name, pm.dept_no AS prof_dept_no,
    		p.office_no,
    		pd.dept_name AS prof_dept_name,
   		 	sm.member_no AS stu_no, sm.name AS stu_name, sm.dept_no AS stu_dept_no,
   		 	s.year,
   		 	sd.dept_name AS stu_dept_name
		FROM consult c 
    		JOIN service_user pu ON c.prof_id = pu.user_id
    		JOIN member pm ON pu.member_no = pm.member_no
    		JOIN professor p ON pu.member_no = p.member_no
    		JOIN department pd ON pm.dept_no = pd.dept_no 
			JOIN service_user su ON c.stu_id = su.user_id  
			JOIN member sm ON su.member_no = sm.member_no
			JOIN student s ON su.member_no = s.member_no 
			JOIN department sd ON sm.dept_no = sd.dept_no
		WHERE c.prof_id = #{profId} AND c.stu_id = #{stuId}
	</select>
	
	<!-- 특정 교수의 상담 가능 시간 -->
	<select id="selectConsultableTimeByUser" parameterType="String" resultType="ConsultableTime">
		SELECT able_date, able_time, prof_id
		FROM consultable_time
		WHERE prof_id = #{profId}
	</select>
	
	<!-- 선택한 시간대에 예약 내역이 존재하는지 확인 -->
	<select id="selectConsultByDate" parameterType="String" resultMap="consultResultMap">
		SELECT consult_id, start_date, end_date, reason, type, status, c.prof_id, c.stu_id, cancel_msg,
    		pm.member_no AS prof_no, pm.name AS prof_name, pm.dept_no AS prof_dept_no,
    		p.office_no,
    		pd.dept_name AS prof_dept_name,
   		 	sm.member_no AS stu_no, sm.name AS stu_name, sm.dept_no AS stu_dept_no,
   		 	s.year,
   		 	sd.dept_name AS stu_dept_name
		FROM consult c 
    		JOIN service_user pu ON c.prof_id = pu.user_id
    		JOIN member pm ON pu.member_no = pm.member_no
    		JOIN professor p ON pu.member_no = p.member_no
    		JOIN department pd ON pm.dept_no = pd.dept_no 
			JOIN service_user su ON c.stu_id = su.user_id  
			JOIN member sm ON su.member_no = sm.member_no
			JOIN student s ON su.member_no = s.member_no 
			JOIN department sd ON sm.dept_no = sd.dept_no
		WHERE c.stu_id = #{stuId} AND (status = 0 OR status = 1)
			AND ((start_date <![CDATA[>=]]> TO_DATE(#{startDate},'YY/MM/DD HH24:MI:SS') AND start_date <![CDATA[<]]> TO_DATE(#{endDate},'YY/MM/DD HH24:MI:SS'))
					OR (end_date > TO_DATE(#{startDate},'YY/MM/DD HH24:MI:SS') AND end_date <![CDATA[<=]]> TO_DATE(#{endDate},'YY/MM/DD HH24:MI:SS')))
	</select>
	
	<!-- 예약 생성 -->
	<insert id="insertConsult" parameterType="Consult">
	<selectKey keyProperty="id" resultType="int" order="BEFORE"> SELECT CONSULT_SEQ.nextval FROM DUAL </selectKey>
		INSERT INTO consult (consult_id, start_date, end_date, reason, type, status, stu_id, prof_id)
		VALUES (#{id}, TO_DATE(#{startDate}, 'YY/MM/DD HH24:mi:ss'), TO_DATE(#{endDate}, 'YY/MM/DD HH24:mi:ss'),
				#{reason}, #{type}, #{status}, #{stuUser.userId}, #{profUser.userId})
	</insert>
	
	<!-- 상담 백업 생성 -->
	<insert id="insertConsultBackup" parameterType="String">
		INSERT INTO consult_backup (backup_id, start_date, end_date, reason, type, consult_id, stu_no, prof_no)
		SELECT CONCAT('CB', c.consult_id) AS backup_id, c.start_date, c.end_date, c.reason, c.type, c.consult_id,
			pu.member_no AS prof_no,
			su.member_no AS stu_no		
		FROM consult c
			JOIN service_user pu ON c.prof_id = pu.user_id
			JOIN service_user su ON c.stu_id = su.user_id 
		WHERE c.consult_id = #{consultId}
	</insert>
</mapper>